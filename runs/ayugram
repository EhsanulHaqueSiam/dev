#!/bin/bash
set -euo pipefail

# Configuration
BUILD_PATH="${1:-$HOME/TBuild}"
API_ID=2040
API_HASH="b18441a1ff607e10a989891a5462e627"
TDESKTOP_DIR="$BUILD_PATH/tdesktop"

# Check dependencies
check_dependency() {
    if ! command -v "$1" &> /dev/null; then
        echo "Error: $1 is required but not installed."
        exit 1
    fi
}

check_dependency git
check_dependency docker
check_dependency poetry

# Create build directory
mkdir -p "$BUILD_PATH"
cd "$BUILD_PATH"

# Clone repository
if [ -d "$TDESKTOP_DIR" ]; then
    echo "Error: $TDESKTOP_DIR already exists. Please remove it or choose a different build path."
    exit 1
fi

git clone --recursive https://github.com/AyuGram/AyuGramDesktop.git tdesktop

# Prepare libraries
cd tdesktop
chmod +x Telegram/build/prepare/linux.sh
./Telegram/build/prepare/linux.sh

# Build project
read -p "Do you want to create a Debug build? [y/N] " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    CONFIG_OPT="-e CONFIG=Debug"
    CONFIG_TYPE="Debug"
else
    CONFIG_OPT=""
    CONFIG_TYPE="Release"
fi

docker run --rm -it \
    -v "$PWD:/usr/src/tdesktop" \
    $CONFIG_OPT \
    ghcr.io/telegramdesktop/tdesktop/centos_env:latest \
    /usr/src/tdesktop/Telegram/build/docker/centos_env/build.sh \
    -D TDESKTOP_API_ID=$API_ID \
    -D TDESKTOP_API_HASH=$API_HASH

# Optional strip binaries
if [ "$CONFIG_TYPE" == "Release" ]; then
    read -p "Do you want to strip binaries to reduce size? [Y/n] " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Nn]$ ]]; then
        find "$TDESKTOP_DIR/out/Release" -type f -executable -exec strip {} \;
        echo "Binaries stripped."
    fi
fi

echo -e "\nBuild complete! You can find the built files in:"
echo "$TDESKTOP_DIR/out/$CONFIG_TYPE"