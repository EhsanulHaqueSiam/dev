#!/bin/bash

# Check if fnm is installed
if command -v fnm &>/dev/null; then
  echo "fnm is already installed. Updating fnm..."
  curl -fsSL https://fnm.vercel.app/install | bash -s -- --skip-shell
else
  echo "Installing fnm..."
  curl -fsSL https://fnm.vercel.app/install | bash
fi

# Check for existing .bashrc or .zshrc
SHELL_CONFIG=""
if [[ -f "$HOME/.bashrc" ]]; then
  SHELL_CONFIG="$HOME/.bashrc"
elif [[ -f "$HOME/.zshrc" ]]; then
  SHELL_CONFIG="$HOME/.zshrc"
else
  echo "No shell configuration file found!"
  exit 1
fi

# Set up fnm for the current shell
# echo 'eval "$(fnm env --use-on-cd --shell bash)"' >> "$SHELL_CONFIG"

# Source the shell configuration to apply changes
source "$SHELL_CONFIG"

# Get the latest Node.js version from fnm list-remote
LATEST_NODE_VERSION=$(fnm list-remote | tail -n 1 | awk '{print $1}')

# Install the latest Node.js version using fnm
echo "Installing Node.js $LATEST_NODE_VERSION using fnm..."
fnm install "$LATEST_NODE_VERSION"

# Set the latest Node.js version as the default
fnm default "$LATEST_NODE_VERSION"

# Verify the installation
echo "Node.js version:"
node -v
echo "fnm version:"
fnm --version

echo "Installation complete!"
